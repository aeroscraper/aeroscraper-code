
taha@HP-Probook:~/Documents/Projects/Aeroscraper/aerospacer-solana$ ANCHOR_PROVIDER_URL=https://api.devnet.solana.com ANCHOR_WALLET=~/.config/solana/id.json npx ts-mocha -p ./tsconfig.json -t 1000000 'tests/**/protocol-oracle-integration.ts
'
(node:1460682) [MODULE_TYPELESS_PACKAGE_JSON] Warning: Module type of file:///home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/tests/protocol-oracle-integration.ts is not specified and it doesn't parse as CommonJS.
Reparsing as ES module because module syntax was detected. This incurs a performance overhead.
To eliminate this warning, add "type": "module" to /home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/package.json.
(Use `node --trace-warnings ...` to show where the warning was created)


  Protocol Contract - Oracle Integration Tests

ðŸ”® Setting up Oracle Integration Tests...
ðŸš€ Setting up test environment for devnet...
âœ… Oracle already initialized on devnet
âœ… Fees already initialized on devnet
âœ… Protocol already initialized on devnet
âœ… Setup complete
    Test 7.1: Get Price via CPI Call
ðŸ“‹ Testing oracle CPI price query...
      1) Should query oracle price through CPI
    Test 7.2: ICR Calculation with Real Pyth Prices
ðŸ“‹ Testing ICR calculation with Pyth prices...
      2) Should calculate ICR using real-time Pyth prices
    Test 7.3: Liquidation Threshold with Oracle Prices
ðŸ“‹ Testing liquidation threshold with oracle...
      3) Should determine liquidation threshold from oracle
    Test 7.4: Multi-Collateral Price Queries
ðŸ“‹ Testing multi-collateral support...
  âœ… SOL: Supported via Pyth feed
  âœ… Protocol architecture supports multi-collateral
  âœ… Each denom stored separately in protocol state
âœ… Multi-collateral architecture verified
      âœ” Should support multiple collateral types
    Test 7.5: Price Staleness Handling
ðŸ“‹ Testing price staleness...
  âœ… Local: Uses get_price_unchecked for testing
  âœ… Devnet: Uses get_price with 5-minute staleness check
  âœ… Staleness validation architecture in place
âœ… Price staleness handling verified
      âœ” Should handle price staleness validation
    Test 7.6: Invalid Oracle Account Rejection
ðŸ“‹ Testing oracle account validation...
  âœ… Oracle program ID validated against state
  âœ… Oracle state account validated against state
  âœ… Covered in CPI security tests
âœ… Oracle account validation verified
      âœ” Should reject invalid oracle accounts
    Test 7.7: Oracle State Validation
ðŸ“‹ Testing oracle state validation...
  âœ… Oracle state address matches protocol state
  âœ… Oracle program ID matches protocol state
âœ… Oracle state validation verified
      âœ” Should validate oracle state PDA (222ms)
    Test 7.8: Price Decimal Conversion
ðŸ“‹ Testing decimal conversion...
      4) Should handle different decimal places


  4 passing (49s)
  4 failing

  1) Protocol Contract - Oracle Integration Tests
       Test 7.1: Get Price via CPI Call
         Should query oracle price through CPI:
     Error: AnchorError caused by account: protocol_collateral_account. Error Code: ConstraintTokenMint. Error Number: 2014. Error Message: A token mint constraint was violated.
Program log: Left:
Program log: Hygyfy8RBxLvoz5b3ffsg9PAvEkT3BJXXdTpVu6ftZYz
Program log: Right:
Program log: 3F5GnVKnyt5ynJqTkUYiNw4vtjMpjgBtLJZ5z7xPXoom
      at Function.parse (node_modules/@coral-xyz/anchor/src/error.ts:168:14)
      at translateError (node_modules/@coral-xyz/anchor/src/error.ts:277:35)
      at MethodsBuilder.rpc [as _rpcFn] (node_modules/@coral-xyz/anchor/src/program/namespace/rpc.ts:35:29)
      at processTicksAndRejections (node:internal/process/task_queues:105:5)

  2) Protocol Contract - Oracle Integration Tests
       Test 7.2: ICR Calculation with Real Pyth Prices
         Should calculate ICR using real-time Pyth prices:
     Error: Account does not exist or has no data 7Pa3Ue4DqKa79wXowuNVdeVYfGnkRMqyX86h1sBMC7qr
      at AccountClient.fetch (node_modules/@coral-xyz/anchor/src/program/namespace/account.ts:168:13)
      at processTicksAndRejections (node:internal/process/task_queues:105:5)

  3) Protocol Contract - Oracle Integration Tests
       Test 7.3: Liquidation Threshold with Oracle Prices
         Should determine liquidation threshold from oracle:
     Error: Account does not exist or has no data 7Pa3Ue4DqKa79wXowuNVdeVYfGnkRMqyX86h1sBMC7qr
      at AccountClient.fetch (node_modules/@coral-xyz/anchor/src/program/namespace/account.ts:168:13)
      at processTicksAndRejections (node:internal/process/task_queues:105:5)

  4) Protocol Contract - Oracle Integration Tests
       Test 7.8: Price Decimal Conversion
         Should handle different decimal places:
     TypeError: Cannot read properties of undefined (reading 'fetch')
      at /home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/tests/protocol-oracle-integration.ts:156:71
      at Generator.next (<anonymous>)
      at /home/taha/Documents/Projects/Aeroscraper/aerospacer-solana/tests/protocol-oracle-integration.ts:8:71
      at new Promise (<anonymous>)
      at __awaiter (tests/protocol-oracle-integration.ts:4:12)
      at Context.<anonymous> (tests/protocol-oracle-integration.ts:151:61)
      at processImmediate (node:internal/timers:485:21)



taha@HP-Probook:~/Documents/Projects/Aeroscraper/aerospacer-solana$ 